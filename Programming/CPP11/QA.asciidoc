= Q&A Of C++ Primer 5th
陈小龙 <shuanglongchen@yeah.net>
v1.0, 2015-1-20
:library: Asciidoctor
:imagesdir: images
:lang: zh-cmn-Hans
:doctype: article
:description:
:icons: font
:source-highlighter: pygments
:pygments-style: manni
:pygments-linenums-mode: inline
:linkcss!:
:numbered:
:idprefix:
:toc: right
:toclevels: 3
:experimental:

:numbered!:
[abstract]

:numbered:

== 右值引用

=== std::move

==== Q

[source,C++,linenums]
----
int&& rr1 = 12;
int&& rr2 = std::move(rr1);

std::cout << rr2 << std::endl;      // 12

rr1 = 15;
std::cout << rr2 << std::endl;      // 15

// std::cout << rr1 << std::endl;   // 非法操作
----

为什么std::move后不能再操作原来的对象？

C++ Primer第5版里解释是:
____
We can destory a moved-from object and can assign a new value to it, 
but we cannot use the value of a moved-from object.
____

为什么呢？

==== A




=== std::move

==== Q
____
As we've seen, differently from how we use most names from the library, 
we donot provide a using declaration(§3.1, p.82), for move(§13.5, p.530).
____

==== A
